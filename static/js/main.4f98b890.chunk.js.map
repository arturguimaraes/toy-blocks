{"version":3,"sources":["reducers/initialState.ts","reducers/nodes.ts","store/configureStore.ts","constants/colors.js","components/Status.tsx","components/Block.tsx","components/Blocks.tsx","components/Node.tsx","containers/Nodes.tsx","components/NotFoundPage.tsx","components/App.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","nodes","list","url","online","name","loading","expanded","blocks","loadingBlocks","loadingBlocksError","checkNodeStatus","createAsyncThunk","node","a","fetch","response","json","data","checkNodesStatus","thunkAPI","dispatch","forEach","loadBlocks","originalNode","block","id","nodeUrl","index","attributes","push","checkLoadBlocks","nodesSlice","createSlice","reducers","setExpanded","state","action","map","payload","extraReducers","builder","addCase","pending","find","n","meta","arg","fulfilled","node_name","rejected","nodesActions","actions","selectNodes","store","configureStore","reducer","nodesReducer","useAppSelector","useSelector","colors","text","faded","primary","danger","warning","success","contentBackground","border","white","lightgray","darkgray","blue","SpanDot","styled","shouldForwardProp","prop","includes","borderRadius","display","width","height","backgroundColor","SpanText","fontSize","lineHeight","fontWeight","letterSpacing","paddingLeft","color","Status","Box","alignItems","BoxDetail","marginBottom","TypographyHeading","Typography","fontFamily","fontStyle","textTransform","padding","TypographySecondaryHeading","theme","Block","props","Blocks","AccordionRoot","Accordion","margin","boxShadow","AccordionSummaryContainer","AccordionSummary","BoxSummaryContent","flexDirection","justifyContent","paddingRight","BoxDetailMessage","minHeight","textAlign","Node","toggleNodeExpanded","numberOfBlocks","length","error","elevation","onChange","expandIcon","variant","AccordionDetails","Nodes","useState","expandedNodeURL","setExpandedNodeURL","useDispatch","useEffect","paddingTop","component","style","NotFoundPage","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f98b890.chunk.js","sourcesContent":["const initialState = () => ({\r\n  nodes: {\r\n    list: [\r\n      {\r\n        url: \"https://thawing-springs-53971.herokuapp.com\",\r\n        online: false,\r\n        name: \"Node 1\",\r\n        loading: false,\r\n        expanded: false,\r\n        blocks: [],\r\n        loadingBlocks: false,\r\n        loadingBlocksError: false,\r\n      },\r\n      {\r\n        url: \"https://secret-lowlands-62331.herokuapp.com\",\r\n        online: false,\r\n        name: \"Node 2\",\r\n        loading: false,\r\n        expanded: false,\r\n        blocks: [],\r\n        loadingBlocks: false,\r\n        loadingBlocksError: false,\r\n      },\r\n      {\r\n        url: \"https://calm-anchorage-82141.herokuapp.com\",\r\n        online: false,\r\n        name: \"Node 3\",\r\n        loading: false,\r\n        expanded: false,\r\n        blocks: [],\r\n        loadingBlocks: false,\r\n        loadingBlocksError: false,\r\n      },\r\n      {\r\n        url: \"http://localhost:3002\",\r\n        online: false,\r\n        name: \"Node 4\",\r\n        loading: false,\r\n        expanded: false,\r\n        blocks: [],\r\n        loadingBlocks: false,\r\n        loadingBlocksError: false,\r\n      },\r\n    ],\r\n  },\r\n});\r\nexport default initialState;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport initialState from \"./initialState\";\r\nimport { Node } from \"../types/Node\";\r\nimport { RootState } from \"../store/configureStore\";\r\nimport fetch from \"cross-fetch\";\r\nimport { Block } from \"../types/Block\";\r\n\r\nexport interface NodesState {\r\n  list: Node[];\r\n}\r\n\r\nexport interface OriginalNode {\r\n  id: string;\r\n  attributes: {\r\n    index: number;\r\n    data: string;\r\n  };\r\n}\r\n\r\nexport const checkNodeStatus = createAsyncThunk(\r\n  \"nodes/checkNodeStatus\",\r\n  async (node: Node) => {\r\n    const response = await fetch(`${node.url}/api/v1/status`);\r\n    const data: { node_name: string } = await response.json();\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const checkNodesStatus = createAsyncThunk(\r\n  \"nodes/checkNodesStatus\",\r\n  async (nodes: Node[], thunkAPI) => {\r\n    const { dispatch } = thunkAPI;\r\n    nodes.forEach((node) => {\r\n      dispatch(checkNodeStatus(node));\r\n    });\r\n  }\r\n);\r\n\r\nexport const loadBlocks = createAsyncThunk(\r\n  \"nodes/loadBlocks\",\r\n  async (node: Node) => {\r\n    const response = await fetch(`${node.url}/api/v1/blocks`);\r\n    let data = await response.json();\r\n    const blocks = [] as Block[];\r\n    if (data.data) {\r\n      data = data.data;\r\n      data.forEach((originalNode: OriginalNode) => {\r\n        const block = {\r\n          id: originalNode.id,\r\n          nodeUrl: node.url,\r\n          index: originalNode.attributes.index,\r\n          data: originalNode.attributes.data,\r\n        } as Block;\r\n        blocks.push(block);\r\n      });\r\n    }\r\n    return blocks;\r\n  }\r\n);\r\n\r\nexport const checkLoadBlocks = createAsyncThunk(\r\n  \"nodes/checkLoadBlocks\",\r\n  async (nodes: Node[], thunkAPI) => {\r\n    const { dispatch } = thunkAPI;\r\n    nodes.forEach((node) => {\r\n      if (node.expanded) {\r\n        dispatch(loadBlocks(node));\r\n      }\r\n    });\r\n  }\r\n);\r\n\r\nexport const nodesSlice = createSlice({\r\n  name: \"nodes\",\r\n  initialState: initialState().nodes as NodesState,\r\n  reducers: {\r\n    setExpanded(state, action) {\r\n      const nodes = state.list;\r\n      nodes.map((node) => {\r\n        //Set as parameter\r\n        if (node.url === action.payload.url) {\r\n          node.expanded = action.payload.expanded;\r\n        } else {\r\n          node.expanded = false;\r\n        }\r\n        return node;\r\n      });\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    //checkNodeStatus\r\n    builder.addCase(checkNodeStatus.pending, (state, action) => {\r\n      const node = state.list.find((n) => n.url === action.meta.arg.url);\r\n      if (node) node.loading = true;\r\n    });\r\n    builder.addCase(checkNodeStatus.fulfilled, (state, action) => {\r\n      const node = state.list.find((n) => n.url === action.meta.arg.url);\r\n      if (node) {\r\n        node.online = true;\r\n        node.loading = false;\r\n        node.name = action.payload.node_name;\r\n      }\r\n    });\r\n    builder.addCase(checkNodeStatus.rejected, (state, action) => {\r\n      const node = state.list.find((n) => n.url === action.meta.arg.url);\r\n      if (node) {\r\n        node.online = false;\r\n        node.loading = false;\r\n      }\r\n    });\r\n    //loadBlocks\r\n    builder.addCase(loadBlocks.pending, (state, action) => {\r\n      const node = state.list.find((n) => n.url === action.meta.arg.url);\r\n      if (node) {\r\n        //node.blocks = [];\r\n        node.loadingBlocks = true;\r\n        node.loadingBlocksError = false;\r\n      }\r\n    });\r\n    builder.addCase(loadBlocks.fulfilled, (state, action) => {\r\n      const node = state.list.find((n) => n.url === action.meta.arg.url);\r\n      if (node) {\r\n        node.blocks = action.payload;\r\n        node.loadingBlocks = false;\r\n        node.loadingBlocksError = false;\r\n      }\r\n    });\r\n    builder.addCase(loadBlocks.rejected, (state, action) => {\r\n      const node = state.list.find((n) => n.url === action.meta.arg.url);\r\n      if (node) {\r\n        node.blocks = [];\r\n        node.loadingBlocks = false;\r\n        node.loadingBlocksError = true;\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\nexport const nodesActions = nodesSlice.actions;\r\nexport const selectNodes = (state: RootState) => state.nodes.list;\r\nexport default nodesSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport nodesReducer from \"../reducers/nodes\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    nodes: nodesReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","const colors = {\r\n  text: \"#263238\",\r\n  faded: \"#8a9094\",\r\n  primary: \"#5bb7db\",\r\n  danger: \"#D94238\",\r\n  warning: \"#f4c20d\",\r\n  success: \"#1E9A57\",\r\n  contentBackground: \"#f8f8f8\",\r\n  border: \"#aaaaaa\",\r\n  white: \"#ffffff\",\r\n  lightgray: \"rgba(0, 0, 0, 0.12)\",\r\n  darkgray: \"#263238\",\r\n  blue: \"#304FFE\",\r\n};\r\n\r\nexport default colors;\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport colors from \"../constants/colors\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\ntype Props = {\r\n  online: boolean;\r\n  loading: boolean;\r\n};\r\n\r\nconst SpanDot = styled(\"span\", {\r\n  shouldForwardProp: (prop: string) => ![\"online\", \"loading\"].includes(prop),\r\n})<{ online: boolean; loading: boolean }>(({ online, loading }) => {\r\n  const color = loading\r\n    ? colors.warning\r\n    : online\r\n    ? colors.success\r\n    : colors.danger;\r\n  return {\r\n    borderRadius: \"50%\",\r\n    display: \"inline-block\",\r\n    width: 5,\r\n    height: 5,\r\n    backgroundColor: color,\r\n  };\r\n});\r\n\r\nconst SpanText = styled(\"span\", {\r\n  shouldForwardProp: (prop) => prop !== \"online\",\r\n})<{ online: boolean }>(({ online }) => ({\r\n  fontSize: 14,\r\n  display: \"block\",\r\n  lineHeight: 1.5,\r\n  fontWeight: 400,\r\n  letterSpacing: 1,\r\n  paddingLeft: 5,\r\n  color: online ? colors.text : colors.faded,\r\n}));\r\n\r\nconst Status: React.FC<Props> = ({ online, loading }) => {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <SpanDot online={online} loading={loading}></SpanDot>\r\n      <SpanText online={online}>\r\n        {loading ? \"LOADING\" : online ? \"ONLINE\" : \"OFFLINE\"}\r\n      </SpanText>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import { Block as BlockType } from \"../types/Block\";\r\nimport { Typography, Box } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport colors from \"../constants/colors\";\r\n\r\ninterface Props {\r\n  block: BlockType;\r\n}\r\n\r\nconst BoxDetail = styled(Box)({\r\n  backgroundColor: colors.lightgray,\r\n  borderRadius: \"2px\",\r\n  marginBottom: \"8px\",\r\n});\r\n\r\nconst TypographyHeading = styled(Typography)({\r\n  fontFamily: \"Roboto\",\r\n  fontStyle: \"normal\",\r\n  fontWeight: \"700\",\r\n  fontSize: \"10px\",\r\n  lineHeight: \"16px\",\r\n  letterSpacing: \"1.5px\",\r\n  textTransform: \"uppercase\",\r\n  color: colors.blue,\r\n  padding: \"8px\",\r\n});\r\n\r\nconst TypographySecondaryHeading = styled(Typography)(({ theme }) => ({\r\n  fontFamily: \"Roboto\",\r\n  fontStyle: \"normal\",\r\n  fontWeight: \"400\",\r\n  fontSize: \"14px\",\r\n  lineHeight: \"20px\",\r\n  letterSpacing: \"0.25px\",\r\n  color: colors.darkgray,\r\n  padding: \"0 8px 8px 8px\",\r\n}));\r\n\r\nexport default function Block(props: Props) {\r\n  function getIndexWithZeroes(index: number) {\r\n    if (index < 10) return \"00\" + index;\r\n    if (index < 100) return \"0\" + index;\r\n    return index;\r\n  }\r\n\r\n  return (\r\n    <BoxDetail>\r\n      <TypographyHeading>\r\n        {getIndexWithZeroes(props.block.index)}\r\n      </TypographyHeading>\r\n      <TypographySecondaryHeading>\r\n        {props.block.data}\r\n      </TypographySecondaryHeading>\r\n    </BoxDetail>\r\n  );\r\n}\r\n","import { Block as BlockType } from \"../types/Block\";\r\nimport Block from \"./Block\";\r\n\r\ninterface Props {\r\n  blocks: BlockType[];\r\n}\r\n\r\nexport default function Blocks(props: Props) {\r\n  return (\r\n    <div>\r\n      {props.blocks.map((block) => {\r\n        return <Block key={block.id} block={block} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  AccordionDetails,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport colors from \"../constants/colors\";\r\nimport Status from \"./Status\";\r\nimport { Node as NodeType } from \"../types/Node\";\r\nimport Blocks from \"./Blocks\";\r\n\r\ntype Props = {\r\n  node: NodeType;\r\n  expanded: boolean;\r\n  toggleNodeExpanded: (node: NodeType) => void;\r\n};\r\n\r\nconst AccordionRoot = styled(Accordion)({\r\n  margin: \"16px 0\",\r\n  boxShadow: \"0px 3px 6px 1px rgba(0,0,0,0.15)\",\r\n\r\n  \"&:before\": {\r\n    backgroundColor: \"unset\",\r\n  },\r\n});\r\n\r\nconst AccordionSummaryContainer = styled(AccordionSummary)({\r\n  padding: \"0 24px\",\r\n  \"& .MuiAccordionSummary-content\": {\r\n    margin: \"10px 0 !important\", // Avoid change of sizing on expanded\r\n  },\r\n  \"& .MuiAccordionSummary-expandIconWrapper\": {\r\n    color: colors.faded,\r\n  },\r\n});\r\n\r\nconst BoxSummaryContent = styled(Box)({\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  width: \"100%\",\r\n  paddingRight: 20,\r\n});\r\n\r\nconst TypographyHeading = styled(Typography)({\r\n  fontSize: 17,\r\n  display: \"block\",\r\n  color: colors.text,\r\n  lineHeight: 1.5,\r\n});\r\n\r\nconst TypographySecondaryHeading = styled(Typography)(({ theme }) => ({\r\n  fontSize: 14,\r\n  color: colors.faded,\r\n  lineHeight: 2,\r\n}));\r\n\r\nconst BoxDetailMessage = styled(Box)({\r\n  backgroundColor: colors.lightgray,\r\n  minHeight: \"48px\",\r\n  padding: \"8px\",\r\n  fontFamily: \"Roboto\",\r\n  fontStyle: \"normal\",\r\n  fontWeight: \"400\",\r\n  fontSize: \"14px\",\r\n  lineHeight: \"20px\",\r\n  letterSpacing: \"0.25px\",\r\n  color: colors.darkgray,\r\n  textAlign: \"center\",\r\n});\r\n\r\nconst Node: React.FC<Props> = ({ node, expanded, toggleNodeExpanded }) => {\r\n  const loading = node.loadingBlocks;\r\n  const numberOfBlocks = node.blocks.length;\r\n  const error = node.loadingBlocksError;\r\n  return (\r\n    <AccordionRoot\r\n      elevation={3}\r\n      expanded={expanded}\r\n      onChange={() => toggleNodeExpanded(node)}\r\n    >\r\n      <AccordionSummaryContainer expandIcon={<ExpandMoreIcon />}>\r\n        <BoxSummaryContent>\r\n          <Box>\r\n            <TypographyHeading variant=\"h5\">\r\n              {node.name || \"Unknown\"}\r\n            </TypographyHeading>\r\n            <TypographySecondaryHeading variant=\"subtitle1\">\r\n              {node.url}\r\n            </TypographySecondaryHeading>\r\n          </Box>\r\n          <Status loading={node.loading} online={node.online} />\r\n        </BoxSummaryContent>\r\n      </AccordionSummaryContainer>\r\n      <AccordionDetails>\r\n        {loading && <BoxDetailMessage>Loading blocks...</BoxDetailMessage>}\r\n        {!loading && error && (\r\n          <BoxDetailMessage>Error fetching the blocks</BoxDetailMessage>\r\n        )}\r\n        {!loading && !error && numberOfBlocks === 0 && (\r\n          <BoxDetailMessage>No blocks found</BoxDetailMessage>\r\n        )}\r\n        {!loading && !error && numberOfBlocks > 0 && (\r\n          <Blocks blocks={node.blocks} />\r\n        )}\r\n      </AccordionDetails>\r\n    </AccordionRoot>\r\n  );\r\n};\r\n\r\nexport default Node;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Node as NodeType } from \"../types/Node\";\r\nimport Node from \"../components/Node\";\r\nimport { Typography, Box } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport {\r\n  checkLoadBlocks,\r\n  checkNodesStatus,\r\n  nodesActions,\r\n  selectNodes,\r\n} from \"../reducers/nodes\";\r\n\r\nexport const Nodes: React.FC = () => {\r\n  const [expandedNodeURL, setExpandedNodeURL] = useState<null | string>(null);\r\n  const dispatch = useDispatch();\r\n  const nodes = useAppSelector(selectNodes);\r\n\r\n  useEffect(() => {\r\n    dispatch(checkNodesStatus(nodes));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(checkLoadBlocks(nodes));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [expandedNodeURL]);\r\n\r\n  function toggleNodeExpanded(node: NodeType) {\r\n    //if true, expand and load blocks\r\n    const loadBlocks = node.url !== expandedNodeURL;\r\n    //action to set node.expaded true\r\n    dispatch(nodesActions.setExpanded({ url: node.url, expanded: loadBlocks }));\r\n    //then expand\r\n    setExpandedNodeURL(loadBlocks ? node.url : null);\r\n  }\r\n\r\n  return (\r\n    <Box paddingTop={7}>\r\n      <Typography variant=\"h4\" component=\"h1\">\r\n        <strong style={{ color: \"#000\" }}>Nodes</strong>\r\n      </Typography>\r\n      {nodes.map((node) => (\r\n        <Node\r\n          node={node}\r\n          key={node.url}\r\n          expanded={node.url === expandedNodeURL}\r\n          toggleNodeExpanded={toggleNodeExpanded}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Nodes;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFoundPage: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <h4>404 Page Not Found</h4>\r\n      <Link to=\"/\"> Go back to homepage </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Nodes from \"../containers/Nodes\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Nodes} />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { store } from \"./store/configureStore\";\r\nimport AppComponent from \"./components/App\";\r\nimport \"./styles/styles.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppComponent />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}